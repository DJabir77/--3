import random  # Импортируем модуль для генерации случайных чисел

# Размер игрового поля
ROWS, COLS = 5, 5  # Устанавливаем размер поля 5x5

# Создание игрового поля
def create_board():
    # Генерируем поле, случайно заполняя ячейки 0 или 1 (0 - пусто, 1 - фишка)
    return [[random.choice([0, 1]) for _ in range(COLS)] for _ in range(ROWS)]

# Печать игрового поля
def print_board(board):
    # Печатаем поле в виде строк, разделенных пробелами
    print("\n".join(" ".join(str(cell) for cell in row) for row in board))

# Проверка, закончена ли игра
def game_over(board):
    # Игра закончена, если все клетки поля пусты (0)
    return all(cell == 0 for row in board for cell in row)

# Основная логика игры
def play_game():
    board = create_board()  # Создаем начальное игровое поле
    print_board(board)  # Показываем поле пользователю
    turn = 0  # Начинает первый игрок (0 - первый, 1 - второй)

    while not game_over(board):  # Игра продолжается, пока не забраны все фишки
        print(f"\nХод игрока {turn + 1}")  # Сообщаем, чей сейчас ход
        # Запрашиваем координаты строки и столбца через пробел, разделяем их и преобразуем в числа
        row, col = map(int, input("Введите строку и столбец (0-4) через пробел: ").split())

        # Снимаем все фишки с выбранной строки и столбца
        for i in range(ROWS):  # Убираем фишки в выбранном столбце
            board[i][col] = 0
        for j in range(COLS):  # Убираем фишки в выбранной строке
            board[row][j] = 0

        print_board(board)  # Показываем обновленное поле

        # Проверяем, закончена ли игра
        if game_over(board):
            print(f"Игрок {turn + 1} выиграл!")  # Если да, выводим сообщение о победе
            break

        # Переключаем ход на другого игрока
        turn = 1 - turn

# Запуск игры
if __name__ == "__main__":
    play_game()  # Начинаем игру
